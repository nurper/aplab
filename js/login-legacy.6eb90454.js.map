{"version":3,"file":"js/login-legacy.6eb90454.js","mappings":"4kBAyBMA,GAAgB,QAAS,CAC7BC,IAAK,kBAAMC,EAAMC,YACjBC,IAAK,SAAAC,GACHC,EAAK,oBAAqBD,MAIxBE,GAAY,SAAS,iBAAqB,UAAfL,EAAMM,KAAmB,QAAU,c,ygBC7BpE,MAAMC,EAAc,EAEpB,S,+ZCFA,MAAMA,EAAc,EAEpB,Q,snBCyCMT,GAAgB,QAAS,CAC7BC,IAAK,kBAAMC,EAAMC,YACjBC,IAAK,SAAAC,GACHC,EAAK,oBAAqBD,MAIxBK,GAAe,SAAS,WAC5B,IAAMC,EAAO,CACX,oFACA,4BACuB,aAAvBC,EAAaP,MAAuB,OAAS,OAC7CH,EAAMW,WAAa,WAAa,SAChCX,EAAMY,YAAc,iBAAmB,6BAOzC,OAJIZ,EAAMa,MACRJ,EAAKK,KAAK,SAGLL,KAGHC,GAAe,SAAS,kBAAMV,EAAMe,QAAU,SAAWf,EAAMM,QAE/DU,GAAe,SAAS,iBAAqB,aAAfhB,EAAMM,KAAsB,SAAW,UAErEW,GAAQ,UAERC,GAAU,QAAI,MAEpB,GAAIlB,EAAMmB,WAAY,CACpB,IAAMC,EAAiB,SAAAC,GACjBA,EAAEC,SAAqB,MAAVD,EAAEE,KACjBF,EAAEG,iBACFN,EAAQf,MAAMsB,SACK,WAAVJ,EAAEE,KACXL,EAAQf,MAAMuB,SAIlB,SAAU,WACHT,EAAMU,MAAMC,yBACfC,OAAOC,iBAAiB,UAAWV,GAEnCH,EAAMc,OAAO,QAAS,CACpBR,IAAK,yBACLpB,OAAO,SAOb,SAAgB,WACd0B,OAAOG,oBAAoB,UAAWZ,GAEtCH,EAAMc,OAAO,QAAS,CACpBR,IAAK,yBACLpB,OAAO,O,6rCCtGb,MAAM,EAAc,EAEpB,S,uTCSA,IAAM8B,GAAQ,UAERC,GAAe,SAAS,WAC5B,IAAMzB,EAAO,GACP0B,EAAcF,EAAMG,UAAUC,OAUpC,OARIF,EAAc,GAChB1B,EAAKK,KAAK,0BAGQ,IAAhBqB,GACF1B,EAAKK,KAAK,kBAGLL,K,iSCzBT,MAAMF,EAAc,EAEpB,S,+OCQMU,GAAQ,UAERqB,GAAW,SAAS,kBAAMrB,EAAMU,MAAMW,YAEtCC,GAAiB,SAAS,WAAM,MAC9BC,EAAM,CACVC,MAAO,4DACPC,UAAW,4DACXC,MAAO,4DACPC,UAAW,6DAGPC,EAAQP,EAASnC,MAAT,UAAoBH,EAAM8C,GAA1B,QAAqC9C,EAAM8C,GAEzD,iBAAON,EAAIK,UAAX,QAAqB,M,oQCxBvB,MAAMtC,EAAc,EAEpB,S,oOCQA,IAAMwC,GAAO,QAAS,CACpBN,MAAO,WACPO,KAAM,gCACNC,SAAU,CAAC,cAGPC,GAAS,UAETC,EAAS,WACbD,EAAOpC,KAAK,M,k1CCnBd,MAAMP,EAAc,EAEpB,S,qBCJA,IAAI6C,EAAI,EAAQ,MACZC,EAAY,iBACZC,EAAmB,EAAQ,MAI/BF,EAAE,CAAEG,OAAQ,QAASC,OAAO,GAAQ,CAClCC,SAAU,SAAkBC,GAC1B,OAAOL,EAAUM,KAAMD,EAAIE,UAAUvB,OAAS,EAAIuB,UAAU,QAAKC,MAKrEP,EAAiB","sources":["webpack://admin-one-vue-tailwind/./src/components/CheckRadioPicker.vue","webpack://admin-one-vue-tailwind/./src/components/CheckRadioPicker.vue?c99e","webpack://admin-one-vue-tailwind/./src/components/ControlIcon.vue","webpack://admin-one-vue-tailwind/./src/components/Control.vue","webpack://admin-one-vue-tailwind/./src/components/Control.vue?3db1","webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?673a","webpack://admin-one-vue-tailwind/./src/components/FullScreenSection.vue","webpack://admin-one-vue-tailwind/./src/components/FullScreenSection.vue?295a","webpack://admin-one-vue-tailwind/./src/views/Login.vue","webpack://admin-one-vue-tailwind/./src/views/Login.vue?93c0","webpack://admin-one-vue-tailwind/./node_modules/core-js/modules/es.array.includes.js"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => {}\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    default: 'checkbox'\n  },\n  column: Boolean,\n  modelValue: {\n    type: [Object, Array, String, Number],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputType = computed(() => props.type === 'radio' ? 'radio' : 'checkbox')\n</script>\n\n<template>\n  <div\n    class=\"flex justify-start flex-wrap -mb-3\"\n    :class=\"{'flex-col':column}\"\n  >\n    <label\n      v-for=\"(value, key) in options\"\n      :key=\"key\"\n      :class=\"type\"\n      class=\"mr-6 mb-3 last:mr-0\"\n    >\n      <input\n        v-model=\"computedValue\"\n        :type=\"inputType\"\n        :name=\"name\"\n        :value=\"key\"\n      >\n      <span class=\"check\" />\n      <span class=\"control-label\">{{ value }}</span>\n    </label>\n  </div>\n</template>\n","import script from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ControlIcon.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ControlIcon.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, ref, onMounted, onBeforeUnmount } from 'vue'\nimport { useStore } from 'vuex'\nimport ControlIcon from '@/components/ControlIcon.vue'\n\nconst props = defineProps({\n  name: {\n    type: String,\n    default: null\n  },\n  id: {\n    type: String,\n    default: null\n  },\n  autocomplete: {\n    type: String,\n    default: null\n  },\n  placeholder: {\n    type: String,\n    default: null\n  },\n  icon: {\n    type: String,\n    default: null\n  },\n  options: {\n    type: Array,\n    default: null\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  modelValue: {\n    type: [String, Number, Boolean, Array, Object],\n    default: ''\n  },\n  required: Boolean,\n  borderless: Boolean,\n  transparent: Boolean,\n  ctrlKFocus: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'right-icon-click'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputElClass = computed(() => {\n  const base = [\n    'px-3 py-2 max-w-full focus:ring focus:outline-none border-gray-700 rounded w-full',\n    'dark:placeholder-gray-400',\n    computedType.value === 'textarea' ? 'h-24' : 'h-12',\n    props.borderless ? 'border-0' : 'border',\n    props.transparent ? 'bg-transparent' : 'bg-white dark:bg-gray-800'\n  ]\n\n  if (props.icon) {\n    base.push('pl-10')\n  }\n\n  return base\n})\n\nconst computedType = computed(() => props.options ? 'select' : props.type)\n\nconst controlIconH = computed(() => props.type === 'textarea' ? 'h-full' : 'h-12')\n\nconst store = useStore()\n\nconst inputEl = ref(null)\n\nif (props.ctrlKFocus) {\n  const fieldFocusHook = e => {\n    if (e.ctrlKey && e.key === 'k') {\n      e.preventDefault()\n      inputEl.value.focus()\n    } else if (e.key === 'Escape') {\n      inputEl.value.blur()\n    }\n  }\n\n  onMounted(() => {\n    if (!store.state.isFieldFocusRegistered) {\n      window.addEventListener('keydown', fieldFocusHook)\n\n      store.commit('basic', {\n        key: 'isFieldFocusRegistered',\n        value: true\n      })\n    } else {\n      // console.error('Duplicate field focus event')\n    }\n  })\n\n  onBeforeUnmount(() => {\n    window.removeEventListener('keydown', fieldFocusHook)\n\n    store.commit('basic', {\n      key: 'isFieldFocusRegistered',\n      value: false\n    })\n  })\n}\n</script>\n\n<template>\n  <div class=\"relative\">\n    <select\n      v-if=\"computedType === 'select'\"\n      :id=\"id\"\n      v-model=\"computedValue\"\n      :name=\"name\"\n      :class=\"inputElClass\"\n    >\n      <option\n        v-for=\"option in options\"\n        :key=\"option.id ?? option\"\n        :value=\"option\"\n      >\n        {{ option.label ?? option }}\n      </option>\n    </select>\n    <textarea\n      v-else-if=\"computedType === 'textarea'\"\n      :id=\"id\"\n      v-model=\"computedValue\"\n      :class=\"inputElClass\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      :required=\"required\"\n    />\n    <input\n      v-else\n      :id=\"id\"\n      ref=\"inputEl\"\n      v-model=\"computedValue\"\n      :name=\"name\"\n      :autocomplete=\"autocomplete\"\n      :required=\"required\"\n      :placeholder=\"placeholder\"\n      :type=\"computedType\"\n      :class=\"inputElClass\"\n    >\n    <control-icon\n      v-if=\"icon\"\n      :icon=\"icon\"\n      :h=\"controlIconH\"\n    />\n  </div>\n</template>\n","import script from \"./Control.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Control.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport MainSection from '@/components/MainSection.vue'\n\nconst props = defineProps({\n  bg: {\n    type: String,\n    required: true,\n    validator: value => ['login', 'error'].includes(value)\n  }\n})\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst componentClass = computed(() => {\n  const bgs = {\n    login: 'bg-gradient-to-tr from-purple-400 via-pink-500 to-red-500',\n    loginDark: 'bg-gradient-to-tr from-purple-900 via-pink-900 to-red-900',\n    error: 'bg-gradient-to-tr from-pink-400 via-red-500 to-yellow-500',\n    errorDark: 'bg-gradient-to-tr from-pink-900 via-red-900 to-yellow-900'\n  }\n\n  const bgKey = darkMode.value ? `${props.bg}Dark` : props.bg\n\n  return bgs[bgKey] ?? ''\n})\n</script>\n\n<template>\n  <main-section :class=\"componentClass\">\n    <slot\n      card-class=\"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\"\n      card-rounded=\"rounded-lg\"\n    />\n  </main-section>\n</template>\n","import script from \"./FullScreenSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FullScreenSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { mdiAccount, mdiAsterisk } from '@mdi/js'\nimport FullScreenSection from '@/components/FullScreenSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport CheckRadioPicker from '@/components/CheckRadioPicker.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\n\nconst form = reactive({\n  login: 'john.doe',\n  pass: 'highly-secure-password-fYjUw-',\n  remember: ['remember']\n})\n\nconst router = useRouter()\n\nconst submit = () => {\n  router.push('/')\n}\n</script>\n\n<template>\n  <full-screen-section\n    v-slot=\"{ cardClass, cardRounded }\"\n    bg=\"login\"\n  >\n    <card-component\n      :class=\"cardClass\"\n      :rounded=\"cardRounded\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <field\n        label=\"Login\"\n        help=\"Please enter your login\"\n      >\n        <control\n          v-model=\"form.login\"\n          :icon=\"mdiAccount\"\n          name=\"login\"\n          autocomplete=\"username\"\n        />\n      </field>\n\n      <field\n        label=\"Password\"\n        help=\"Please enter your password\"\n      >\n        <control\n          v-model=\"form.pass\"\n          :icon=\"mdiAsterisk\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"current-password\"\n        />\n      </field>\n\n      <check-radio-picker\n        v-model=\"form.remember\"\n        name=\"remember\"\n        :options=\"{ remember: 'Remember' }\"\n      />\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Login\"\n        />\n        <jb-button\n          to=\"/\"\n          color=\"info\"\n          outline\n          label=\"Back\"\n        />\n      </jb-buttons>\n    </card-component>\n  </full-screen-section>\n</template>\n","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"names":["computedValue","get","props","modelValue","set","value","emit","inputType","type","__exports__","inputElClass","base","computedType","borderless","transparent","icon","push","options","controlIconH","store","inputEl","ctrlKFocus","fieldFocusHook","e","ctrlKey","key","preventDefault","focus","blur","state","isFieldFocusRegistered","window","addEventListener","commit","removeEventListener","slots","wrapperClass","slotsLength","default","length","darkMode","componentClass","bgs","login","loginDark","error","errorDark","bgKey","bg","form","pass","remember","router","submit","$","$includes","addToUnscopables","target","proto","includes","el","this","arguments","undefined"],"sourceRoot":""}